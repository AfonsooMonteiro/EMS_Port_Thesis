Building a simple energy sytem mangment model 

Step 0 – Define Scope & Inputs

Simplified EMS for Cruise Port:
Energy sources: Grid (buy/sell), PV, Storage (optional at start).
Energy consumers: Cruise vessels (as main load).

Objective: Decide optimal energy mix at each time step (grid vs PV, buy vs sell) based on price & demand.

Synthetic data you’ll need:
PV generation profile (hourly/day).
Cruise vessel consumption profile (hourly/day).
Grid price profile (hourly/day).

You can generate this with Python using simple sine waves or random variations.





Step 1 – Basic Energy Accounting

Goal: Compute energy balance at each time step.

Total demand = Cruise vessels.

Total supply = PV + Grid.

Compute deficit or surplus at each step.

Python Tools: pandas for time series, numpy for calculations.

Output: Table showing how much energy comes from PV vs Grid at each hour.






Step 2 – Implement Basic Control Rules

Goal: Start with simple decision logic, no optimization yet.

Examples of rules:

If PV ≥ demand → use PV first, surplus stored or sold.

If PV < demand → buy remainder from grid.

Optional: storage usage (charge if surplus, discharge if deficit).

Output: Hourly energy allocation and unmet/surplus energy.





Step 3 – Cost & Market Awareness

Goal: Add energy prices to decide buying/selling.

Compute cost of energy from grid.

Compute revenue if selling surplus to the grid.

Optional: include price signal from energy market.

Output: Cost/revenue profile for your EMS decisions.








Step 4 – Basic Optimization

Goal: Decide optimal allocation instead of simple rules.

Use linear programming or simple heuristics:

Minimize total energy cost.

Constraints: demand = PV + grid + storage.

Optional: limit % PV use or storage cycles.

Python Tools: Pyomo or cvxpy for optimization.

Output: Optimal energy mix per hour.








Step 5 – Add Storage & Flexibility

Include battery storage to shift PV surplus to peak demand.

Adjust rules or optimization to charge/discharge storage efficiently.






Step 6 – Visualization / Dashboard

Plot energy allocation, cost, PV/grid usage, storage state.

Use Matplotlib / Plotly / Streamlit for a simple dashboard.







Step 7 – Optional Enhancements

Forecast PV generation or vessel demand for predictive control.

Include more complex constraints (grid limits, demand response signals).

Integrate real-time data if you have access to sensors.

Key Principles

Start small: One day, synthetic PV + vessel demand + grid.

Focus on one loop: Data → Decision → Cost.

Build modularly: Add storage, optimization, market signals after basic EMS works.

Use Python as your main tool: It covers data, control logic, optimization, and visualization.
